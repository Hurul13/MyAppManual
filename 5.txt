// filter kategori tidak bisa balik ke all kalo sudah pilih

import React, {useState, useEffect} from 'react';
import {
  View,
  Text,
  FlatList,
  StyleSheet,
  Image,
  TouchableOpacity,
  TextInput,
  ScrollView,
} from 'react-native';
import {
  WARNA_DISABLE,
  WARNA_UTAMA,
  WARNA_SEKUNDER,
  WARNA_WHITE,
  WARNA_GRAYTUA,
} from '../../utils/constant';
import {
  responsiveHeight,
  responsiveWidth,
} from 'react-native-responsive-dimensions';
const ReviewRating = () => {
  const [items, setItems] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    fetch('http://192.168.1.3/homeii/web/api/v1/supplier-barang/index')
      .then(response => response.json())
      .then(data => setItems(data.data));
  }, []);

  const renderItem = ({item}) => (
    <TouchableOpacity style={styles.card}>
      <Image
        style={styles.image}
        source={require('../../assets/Images/batu.jpg')}
      />
      <Text style={styles.title}>{item.nama_barang}</Text>
      <Text style={styles.price}>Harga Proyek: {item.harga_proyek}</Text>
      <Text style={styles.stock}>Stok: {item.stok}</Text>
      {/* <View style={styles.cardDetails}></View> */}
    </TouchableOpacity>
  );

  const handleCategorySelect = category => {
    setSelectedCategory(category);
  };

  const handleSearch = text => {
    setSearchTerm(text);
  };

  const filteredItems = items.filter(item => {
    if (
      selectedCategory &&
      item.nama_barang.toLowerCase().indexOf(selectedCategory.toLowerCase()) ===
        -1
    ) {
      return false;
    }
    if (
      searchTerm &&
      item.nama_barang.toLowerCase().indexOf(searchTerm.toLowerCase()) === -1
    ) {
      return false;
    }
    return true;
  });

  return (
    <View style={styles.container}>
      <ScrollView
        horizontal
        showsHorizontalScrollIndicator={false}
        style={styles.categoryContainer}>
        {['batu', 'semen', 'pasir', 'keramik', 'genteng', 'besi'].map(
          category => (
            <TouchableOpacity
              key={category}
              style={[
                styles.category,
                selectedCategory === category && styles.selectedCategory,
              ]}
              onPress={() => handleCategorySelect(category)}>
              <Text style={styles.categoryText}>{category}</Text>
            </TouchableOpacity>
          ),
        )}
      </ScrollView>
      <View style={styles.searchContainer}>
        <TextInput
          style={styles.searchInput}
          placeholder="Cari Nama Barang"
          placeholderTextColor={WARNA_DISABLE}
          onChangeText={handleSearch}
        />
      </View>
      <FlatList
        data={filteredItems}
        renderItem={renderItem}
        keyExtractor={item => item.id}
        numColumns={2}
        contentContainerStyle={styles.listContainer}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  listContainer: {
    padding: 10,
  },
  // card: {
  //   flex: 1,
  //   margin: 10,
  //   borderRadius: 10,
  //   backgroundColor: '#fff',
  //   shadowColor: '#000',
  //   shadowOffset: {
  //     width: 0,
  //     height: 2,
  //   },
  //   shadowOpacity: 0.25,
  // },
  card: {
    flex: 1,
    backgroundColor: '#fff',
    borderRadius: 8,
    padding: 16,
    marginHorizontal: 8,
    marginBottom: 16,
    alignItems: 'center',
  },
  image: {
    width: 120,
    height: 120,
    marginBottom: 8,
  },
  title: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 8,
    color: 'red',
  },
  price: {
    fontSize: 14,
    color: 'green',
    marginBottom: 8,
  },
  stock: {
    fontSize: 12,
    color: 'gray',
  },
  searchInput: {
    height: 40,
    borderColor: '#CCCCCC',
    borderWidth: 1,
    borderRadius: 20,
    paddingLeft: 10,
    paddingRight: 10,
    marginBottom: 10,
    color: 'black',
  },
  categoryContainer: {
    flexDirection: 'row',
  },
  category: {
    borderWidth: 1,
    backgroundColor: 'gray',
    paddingHorizontal: responsiveHeight(2),
    paddingVertical: responsiveWidth(2),
    marginHorizontal: responsiveHeight(1),
    marginVertical: responsiveWidth(2),
  },
  selectedCategory: {
    backgroundColor: 'red',
  },
  categoryText: {
    color: 'white',
  },
});
export default ReviewRating;
