// sukses filter by kategory dan search

import React, {useState, useEffect} from 'react';
import {
  View,
  Text,
  Image,
  FlatList,
  StyleSheet,
  ScrollView,
  TextInput,
} from 'react-native';
import {
  WARNA_DISABLE,
  WARNA_UTAMA,
  WARNA_SEKUNDER,
  WARNA_WHITE,
  WARNA_GRAYTUA,
} from '../../utils/constant';
import {responsiveHeight} from 'react-native-responsive-dimensions';
const API_URL = 'http://192.168.1.3/homeii/web/api/v1/supplier-barang/index';

const ReviewRating = () => {
  const [items, setItems] = useState([]);
  const [filteredItems, setFilteredItems] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('');
  const [searchTerm, setSearchTerm] = useState('');

  useEffect(() => {
    fetch(API_URL)
      .then(response => response.json())
      .then(data => setItems(data.data))
      .catch(error => console.error(error));
  }, []);

  useEffect(() => {
    if (selectedCategory !== '') {
      const filtered = items.filter(item =>
        item.nama_barang.toLowerCase().includes(selectedCategory.toLowerCase()),
      );
      setFilteredItems(filtered);
    } else {
      setFilteredItems(items);
    }
  }, [selectedCategory, items]);

  useEffect(() => {
    if (searchTerm !== '') {
      const filtered = items.filter(item =>
        item.nama_barang.toLowerCase().includes(searchTerm.toLowerCase()),
      );
      setFilteredItems(filtered);
    } else {
      setFilteredItems(items);
    }
  }, [searchTerm, items]);

  const handleCategorySelect = category => {
    setSelectedCategory(category);
  };

  const renderItem = ({item}) => (
    <View style={styles.card}>
      <Image
        source={require('../../assets/Images/batu.jpg')}
        style={styles.image}
      />
      <Text style={styles.title}>{item.nama_barang}</Text>
      <Text style={styles.price}>Harga: {item.harga_proyek}</Text>
      <Text style={styles.stock}>Stok: {item.stok}</Text>
    </View>
  );

  const renderCategoryItem = ({item}) => (
    <Text
      style={[
        styles.categoryItem,
        {backgroundColor: item === selectedCategory ? '#3498db' : '#e6e6e6'},
      ]}
      onPress={() => handleCategorySelect(item)}>
      {item}
    </Text>
  );

  return (
    <View style={styles.container}>
      <View style={styles.searchBar}>
        <TextInput
          style={styles.searchInput}
          placeholder="Cari Barang"
          placeholderTextColor={WARNA_DISABLE}
          value={searchTerm}
          onChangeText={value => setSearchTerm(value)}
        />
      </View>
      <ScrollView
        horizontal
        showsHorizontalScrollIndicator={false}
        contentContainerStyle={styles.categoryList}>
        <FlatList
          data={['batu', 'semen', 'pasir', 'keramik', 'genteng', 'besi']}
          renderItem={renderCategoryItem}
          keyExtractor={item => item}
          horizontal
        />
      </ScrollView>
      <FlatList
        data={filteredItems}
        renderItem={renderItem}
        keyExtractor={item => item.id.toString()}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    padding: 10,
  },
  searchBar: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#f2f2f2',
    borderRadius: 10,
    padding: 5,
    marginBottom: 10,
  },
  searchInput: {
    flex: 1,
    marginLeft: 10,
    fontSize: 16,
    color: 'black',
  },
  categoryItem: {
    paddingHorizontal: responsiveHeight(2),
    marginHorizontal: responsiveHeight(1),
    borderWidth: 1,
    borderRadius: 5,
  },
  categoryList: {
    color: 'black',
    // backgroundColor: 'red',
    // paddingHorizontal: responsiveHeight(2),
  },
  card: {
    flex: 1,
    backgroundColor: '#fff',
    borderRadius: 8,
    padding: 16,
    marginHorizontal: 8,
    marginBottom: 16,
    alignItems: 'center',
  },
  image: {
    width: 120,
    height: 120,
    marginBottom: 8,
  },
  title: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 8,
    color: 'red',
  },
  price: {
    fontSize: 14,
    color: 'green',
    marginBottom: 8,
  },
  stock: {
    fontSize: 12,
    color: 'gray',
  },
});

export default ReviewRating;
