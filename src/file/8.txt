// register, login, & logout (regiter, login gagal karna semuanya langsung sukses tanpa ngisi data. logout gagal)

// register

import React, {useState} from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Alert,
} from 'react-native';
import {
  WARNA_DISABLE,
  WARNA_UTAMA,
  WARNA_SEKUNDER,
  WARNA_WHITE,
  WARNA_GRAYTUA,
} from '../../utils/constant';

const cobaRegister = ({navigation}) => {
  const [name, setName] = useState('');
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [phone, setPhone] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);

  const handleSubmit = () => {
    fetch('http://192.168.1.3/homeii/web/api/v1/auth/register', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        name,
        username,
        email,
        phone,
        password,
      }),
    })
      .then(response => response.json())
      .then(data => {
        console.log(data);
        Alert.alert('Registration Success', 'Register berhasil');
        setTimeout(() => {
          navigation.navigate('cobaLogin');
        }, 3000);
      })
      .catch(error => {
        console.error(error);
        Alert.alert('Registration Failed', 'Coba lagi');
      });
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Register</Text>
      <TextInput
        style={styles.input}
        placeholderTextColor={WARNA_DISABLE}
        placeholder="Name"
        value={name}
        onChangeText={text => setName(text)}
      />
      <TextInput
        style={styles.input}
        placeholderTextColor={WARNA_DISABLE}
        placeholder="Username"
        value={username}
        onChangeText={text => setUsername(text)}
      />
      <TextInput
        style={styles.input}
        placeholderTextColor={WARNA_DISABLE}
        placeholder="Email"
        value={email}
        onChangeText={text => setEmail(text)}
      />
      <TextInput
        style={styles.input}
        placeholderTextColor={WARNA_DISABLE}
        placeholder="Phone"
        value={phone}
        onChangeText={text => setPhone(text)}
      />
      <View style={styles.passwordContainer}>
        <TextInput
          style={[styles.input, styles.passwordInput]}
          placeholderTextColor={WARNA_DISABLE}
          placeholder="Password"
          value={password}
          onChangeText={text => setPassword(text)}
          secureTextEntry={!showPassword}
        />
        <TouchableOpacity
          style={styles.passwordVisibilityButton}
          onPress={togglePasswordVisibility}>
          <Text style={styles.passwordVisibilityButtonText}>
            {showPassword ? 'Hide' : 'Show'}
          </Text>
        </TouchableOpacity>
      </View>
      <TouchableOpacity style={styles.registerButton} onPress={handleSubmit}>
        <Text style={styles.registerButtonText}>Register</Text>
      </TouchableOpacity>
      <TouchableOpacity
        style={styles.loginButton}
        onPress={() => navigation.navigate('cobaLogin')}>
        <Text style={styles.loginButtonText}>
          Already have an account? Login
        </Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#ffffff',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: 'black',
    textAlign: 'center',
  },
  input: {
    height: 40,
    borderRadius: 5,
    borderWidth: 1,
    borderColor: '#cccccc',
    paddingHorizontal: 10,
    marginBottom: 10,
    color: 'black',
  },
  passwordContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
    justifyContent: 'center',
  },
  passwordInput: {
    flex: 1,
    // borderWidth: 1,
  },
  passwordVisibilityButton: {
    marginLeft: 10,
    padding: 5,
    borderWidth: 1,
    backgroundColor: 'black',
  },
  passwordVisibilityButtonText: {
    fontSize: 16,
    color: 'white',
  },
  registerButton: {
    backgroundColor: 'green',
    borderRadius: 100 / 2,
    paddingVertical: 10,
  },
  registerButtonText: {
    color: 'white',
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  // forgotPasswordButton: {
  //   backgroundColor: 'gray',
  //   marginVertical: 3,
  //   // width:
  // },
  forgotPasswordButtonText: {
    color: 'gray',
    textAlign: 'right',
    marginBottom: 10,
  },
  loginButtonText: {
    color: 'black',
    textAlign: 'center',
    marginVertical: 10,
  },
});

export default cobaRegister;


// login

import React, {useState} from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  Alert,
} from 'react-native';
import {
  WARNA_DISABLE,
  WARNA_UTAMA,
  WARNA_SEKUNDER,
  WARNA_WHITE,
  WARNA_GRAYTUA,
} from '../../utils/constant';

const cobaLogin = ({navigation}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showPassword, setShowPassword] = useState(false);

  const handleSubmit = () => {
    fetch('http://192.168.1.3/homeii/web/api/v1/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        username,
        password,
      }),
    })
      .then(response => response.json())
      .then(data => {
        console.log(data);
        Alert.alert('Login Success', 'Login berhasil');
        setTimeout(() => {
          navigation.navigate('cobaLogout');
        }, 3000);
      })
      .catch(error => {
        console.error(error);
        Alert.alert('Login Failed', 'Coba lagi');
      });
  };

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Login</Text>
      <TextInput
        style={styles.input}
        placeholder="Username"
        placeholderTextColor={WARNA_DISABLE}
        value={username}
        onChangeText={text => setUsername(text)}
      />
      <View style={styles.passwordContainer}>
        <TextInput
          style={[styles.input, styles.passwordInput]}
          placeholderTextColor={WARNA_DISABLE}
          placeholder="Password"
          value={password}
          onChangeText={text => setPassword(text)}
          secureTextEntry={!showPassword}
        />
        <TouchableOpacity
          style={styles.passwordVisibilityButton}
          onPress={togglePasswordVisibility}>
          <Text style={styles.passwordVisibilityButtonText}>
            {showPassword ? 'Hide' : 'Show'}
          </Text>
        </TouchableOpacity>
      </View>
      <TouchableOpacity
        style={styles.forgotPasswordButton}
        onPress={() =>
          Alert.alert('Forgot Password', 'Please contact customer support.')
        }>
        <Text style={styles.forgotPasswordButtonText}>Forgot Password?</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.loginButton} onPress={handleSubmit}>
        <Text style={styles.loginButtonText}>Login</Text>
      </TouchableOpacity>
      <TouchableOpacity
        style={styles.registerButton}
        onPress={() => navigation.navigate('cobaRegister')}>
        <Text style={styles.registerButtonText}>
          Don't have an account? Register
        </Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: '#ffffff',
    // alignItems: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: 'black',
    textAlign: 'center',
  },
  input: {
    height: 40,
    borderRadius: 5,
    borderWidth: 1,
    borderColor: '#cccccc',
    paddingHorizontal: 10,
    marginBottom: 10,
    color: 'black',
  },
  passwordContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 10,
    justifyContent: 'center',
  },
  passwordInput: {
    flex: 1,
    // borderWidth: 1,
  },
  passwordVisibilityButton: {
    marginLeft: 10,
    padding: 5,
    borderWidth: 1,
    backgroundColor: 'black',
  },
  passwordVisibilityButtonText: {
    fontSize: 16,
    color: 'white',
  },
  loginButton: {
    backgroundColor: 'green',
    borderRadius: 100 / 2,
    paddingVertical: 10,
  },
  loginButtonText: {
    color: 'white',
    fontSize: 24,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  // forgotPasswordButton: {
  //   backgroundColor: 'gray',
  //   marginVertical: 3,
  //   // width:
  // },
  forgotPasswordButtonText: {
    color: 'gray',
    textAlign: 'right',
    marginBottom: 10,
  },
  registerButtonText: {
    color: 'black',
    textAlign: 'center',
    marginVertical: 10,
  },
});

export default cobaLogin;


//logout

import React, {useState} from 'react';
import {StyleSheet, View, Text, TouchableOpacity, Alert} from 'react-native';

const cobaLogout = ({navigation}) => {
  const [isLoading, setIsLoading] = useState(false);

  const handleLogout = async () => {
    setIsLoading(true);
    try {
      const token = 'your_token_here';
      const response = await fetch(
        'http://192.168.1.3/homeii/web/api/v1/auth/logout',
        {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${token}`,
          },
        },
      );
      const responseData = await response.json();
      setIsLoading(false);
      if (responseData.status === 'success') {
        Alert.alert('Logout berhasil');
        navigation.navigate('cobaLogin'); // kembali ke halaman Login setelah Logout berhasil
      } else {
        Alert.alert('Logout gagal');
      }
    } catch (error) {
      setIsLoading(false);
      console.error(error);
      Alert.alert('Terjadi kesalahan saat melakukan Logout');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Logout</Text>
      <TouchableOpacity style={styles.button} onPress={handleLogout}>
        <Text style={styles.buttonText}>Logout</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    color: 'black',
  },
  button: {
    backgroundColor: '#007AFF',
    padding: 10,
    borderRadius: 5,
  },
  buttonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default cobaLogout;
