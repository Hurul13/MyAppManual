import {
  View,
  Image,
  ScrollView,
  TouchableOpacity,
  SafeAreaView,
  FlatList,
  StatusBar,
  Dimensions,
  Animated,
  ToastAndroid,
} from 'react-native';
import {Text, Box, HStack} from 'native-base';
import React, {useEffect, useState} from 'react';
import styles from './Styles';
import IconMaterial from 'react-native-vector-icons/MaterialCommunityIcons';
import {Buttone} from '../../components';
import Share from 'react-native-share';
import {
  responsiveHeight,
  responsiveWidth,
  responsiveFontSize,
} from 'react-native-responsive-dimensions';
import {
  WARNA_UTAMA,
  WARNA_SEKUNDER,
  WARNA_DEEPYELLOW,
  WARNA_RED,
  WARNA_WHITE,
  WARNA_SILVER,
  WARNA_GRAYTUA,
  WARNA_BLACK,
  WARNA_BLUE,
} from '../../utils/constant';
import NumericInput from 'react-native-numeric-input';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Entypo from 'react-native-vector-icons/Entypo';
import Ionicons from 'react-native-vector-icons/Ionicons';
import {Imagess} from '../../utils/image';
import {url} from '../../utils/url';

const CheckoutShipping = ({navigation, onValueChange, route}) => {
  const navigateTo = async page => {
    navigation.navigate(page);
  };

  const [imgActive, setImgActive] = useState(0);

  onChange = nativeEvent => {
    if (nativeEvent) {
      const slide = Math.ceil(
        nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width,
      );
      if (slide != imgActive) {
        setImgActive(slide);
      }
    }
  };

  const share = async () => {
    const options = {
      message: 'this is a test message',
      // url: 'https://github.com/Hurul13',
      email: 'hurulaini218@gmail.com',
      subject: 'succes',
      recipient: '08765432234',
    };
    try {
      const res = await Share.open(options);
      console.log(JSON.stringify(res));
    } catch (err) {
      console.log('Error => ', err);
    }
  };

  const [value, setValue] = useState(0);
  const {productID} = route.params;
  const [product, setProduct] = useState({});

  const width = Dimensions.get('window').width;

  const scrollX = new Animated.Value(0);

  let position = Animated.divide(scrollX, width);

  useEffect(() => {
    const unsubscribe = navigation.addListener('focus', () => {
      fetchData();
    });

    return unsubscribe;
  }, [navigation]);

  const fetchData = async () => {
    try {
      const response = await fetch(
        `${url}supplier-barang/index`,
        // 'http://192.168.1.3/homeii/web/api/v1/supplier-barang/index',
      );
      const json = await response.json();
      for (let index = 0; index < json.length; index++) {
        if (json[index].id == productID) {
          await setProduct(json[index].data);
          return;
        }
      }
      // setData(json.data);
    } catch (error) {
      console.error(error);
    }
  };

  const addToCart = async id => {
    let itemArray = await AsyncStorage.getItem('cartItems');
    itemArray = JSON.parse(itemArray);
    if (itemArray) {
      let array = itemArray;
      array.push(id);

      try {
        await AsyncStorage.setItem('cartItems', JSON.stringify(array));
        ToastAndroid.show(
          'Item Added Successfully to cart',
          ToastAndroid.SHORT,
        );
        navigation.navigate('CheckoutAddress');
      } catch (error) {
        return error;
      }
    } else {
      let array = [];
      array.push(id);
      try {
        await AsyncStorage.setItem('cartItems', JSON.stringify(array));
        ToastAndroid.show(
          'Item Added Successfully to cart',
          ToastAndroid.SHORT,
        );
        navigation.navigate('CheckoutAddress');
      } catch (error) {
        return error;
      }
    }
  };

  const renderProduct = ({item, index}) => {
    return (
      <View
        style={{
          width: width,
          height: 240,
          alignItems: 'center',
          justifyContent: 'center',
        }}>
        <Image
          source={item}
          style={{
            width: '100%',
            height: '100%',
            resizeMode: 'contain',
          }}
        />
      </View>
    );
  };

  return (
    <View
      style={{
        width: '100%',
        height: '100%',
        backgroundColor: WARNA_WHITE,
        position: 'relative',
      }}>
      {/* <StatusBar backgroundColor={WARNA_SILVER} barStyle="dark-content" /> */}
      <ScrollView>
        <View
          style={{
            width: '100%',
            backgroundColor: WARNA_SILVER,
            borderBottomRightRadius: 20,
            borderBottomLeftRadius: 20,
            position: 'relative',
            justifyContent: 'center',
            alignItems: 'center',
            marginBottom: 4,
          }}>
          <View
            style={{
              width: '100%',
              flexDirection: 'row',
              justifyContent: 'space-between',
              paddingTop: 16,
              paddingLeft: 16,
            }}>
            <TouchableOpacity
              onPress={() => navigation.goBack('CheckoutAddress')}>
              <Entypo
                name="chevron-left"
                style={{
                  fontSize: 18,
                  color: WARNA_GRAYTUA,
                  padding: 12,
                  backgroundColor: WARNA_WHITE,
                  borderRadius: 10,
                }}
              />
            </TouchableOpacity>
          </View>
          <FlatList
            data={product.productImageList ? product.productImageList : null}
            horizontal
            renderItem={renderProduct}
            showsHorizontalScrollIndicator={false}
            decelerationRate={0.8}
            snapToInterval={width}
            bounces={false}
            onScroll={Animated.event(
              [{nativeEvent: {contentOffset: {x: scrollX}}}],
              {useNativeDriver: false},
            )}
          />
          <View
            style={{
              width: '100%',
              flexDirection: 'row',
              alignItems: 'center',
              justifyContent: 'center',
              marginBottom: 16,
              marginTop: 32,
            }}>
            {product.productImageList
              ? product.productImageList.map((data, index) => {
                  let opacity = position.interpolate({
                    inputRange: [index - 1, index, index + 1],
                    outputRange: [0.2, 1, 0.2],
                    extrapolate: 'clamp',
                  });
                  return (
                    <Animated.View
                      key={index}
                      style={{
                        width: '16%',
                        height: 2.4,
                        backgroundColor: WARNA_BLACK,
                        opacity,
                        marginHorizontal: 4,
                        borderRadius: 100,
                      }}></Animated.View>
                  );
                })
              : null}
          </View>
        </View>
        <View
          style={{
            paddingHorizontal: 16,
            marginTop: 6,
          }}>
          <View
            style={{
              flexDirection: 'row',
              alignItems: 'center',
              marginVertical: 14,
            }}>
            <Entypo
              name="shopping-cart"
              style={{
                fontSize: 18,
                color: WARNA_BLUE,
                marginRight: 6,
              }}
            />
            <Text
              style={{
                fontSize: 12,
                color: WARNA_BLACK,
              }}>
              Shopping
            </Text>
          </View>
          <View
            style={{
              flexDirection: 'row',
              marginVertical: 4,
              alignItems: 'center',
              justifyContent: 'space-between',
            }}>
            <Text
              style={{
                fontSize: 24,
                fontWeight: '600',
                letterSpacing: 0.5,
                marginVertical: 4,
                color: WARNA_BLACK,
                maxWidth: '84%',
              }}>
              {product.nama_barang}
            </Text>
            <Ionicons
              name="link-outline"
              style={{
                fontSize: 24,
                color: WARNA_BLUE,
                backgroundColor: WARNA_BLUE + 10,
                padding: 8,
                borderRadius: 100,
              }}
            />
          </View>
          <Text
            style={{
              fontSize: 12,
              color: WARNA_BLACK,
              fontWeight: '400',
              letterSpacing: 1,
              opacity: 0.5,
              lineHeight: 20,
              maxWidth: '85%',
              maxHeight: 44,
              marginBottom: 18,
            }}>
            {product.deskripsi}
          </Text>
          <View
            style={{
              flexDirection: 'row',
              alignItems: 'center',
              justifyContent: 'space-between',
              marginVertical: 14,
              borderBottomColor: WARNA_SILVER,
              borderBottomWidth: 1,
              paddingBottom: 20,
            }}>
            <View
              style={{
                flexDirection: 'row',
                width: '80%',
                alignItems: 'center',
              }}>
              <View
                style={{
                  color: WARNA_BLUE,
                  backgroundColor: WARNA_SILVER,
                  alignItems: 'center',
                  justifyContent: 'center',
                  padding: 12,
                  borderRadius: 100,
                  marginRight: 10,
                }}>
                <Entypo
                  name="location-pin"
                  style={{
                    fontSize: 16,
                    color: WARNA_BLUE,
                  }}
                />
              </View>
              <Text> Rustaveli Ave 57,{'\n'}17-001, Batume</Text>
            </View>
            <Entypo
              name="chevron-right"
              style={{
                fontSize: 22,
                color: WARNA_GRAYTUA,
              }}
            />
          </View>
          <View
            style={{
              paddingHorizontal: 16,
            }}>
            <Text
              style={{
                fontSize: 18,
                fontWeight: '500',
                maxWidth: '85%',
                color: WARNA_BLACK,
                marginBottom: 4,
              }}>
              &#8377; {product.harga_proyek}.00
            </Text>
            <Text>
              Tax Rate 2%~ &#8377;{product.harga_proyek / 20} (&#8377;
              {product.harga_proyek + product.harga_proyek / 20})
            </Text>
          </View>
        </View>
      </ScrollView>

      <View
        style={{
          position: 'absolute',
          bottom: 10,
          height: '8%',
          width: '100%',
          justifyContent: 'center',
          alignItems: 'center',
        }}>
        <TouchableOpacity
          onPress={() => (product.stok ? addToCart(product.id) : null)}
          style={{
            width: '86%',
            height: '90%',
            backgroundColor: WARNA_BLUE,
            borderRadius: 20,
            justifyContent: 'center',
            alignItems: 'center',
          }}>
          <Text
            style={{
              fontSize: 12,
              fontWeight: '500',
              letterSpacing: 1,
              color: WARNA_WHITE,
              textTransform: 'uppercase',
            }}>
            {product.stok ? 'Add to cart' : 'Not Stock'}
          </Text>
        </TouchableOpacity>
      </View>
    </View>
  );

  // return (
  //   <ScrollView showsVerticalScrollIndicator={false} style={styles.container}>
  //     <View style={styles.spaceWrap}>
  //       {/* <Image source={materials.image} alt="Image" style={styles.wrap} /> */}
  //     </View>
  //     <View style={styles.header}>
  //       <TouchableOpacity style={styles.bulat}>
  //         <IconMaterial
  //           name="arrow-left"
  //           size={26}
  //           style={styles.icon}
  //           onPress={navigation.goBack}
  //         />
  //       </TouchableOpacity>
  //       <TouchableOpacity style={styles.bulat} onPress={share}>
  //         <IconMaterial name="dots-vertical" size={26} style={styles.icon} />
  //       </TouchableOpacity>
  //     </View>
  //     <View style={styles.space}>
  //       <Text style={styles.text}>{item.nama_barang}</Text>
  //     </View>
  //     <Text style={styles.text1}>Sisa stok {item.stok}</Text>
  //     <Box
  //       flexDirection="row"
  //       justifyContent="space-between"
  //       alignItems="center"
  //       marginHorizontal={responsiveHeight(3)}>
  //       <Text style={styles.text3}>Rp {item.harga_proyek}</Text>
  //       <HStack space={2} alignItems="center" my={5}>
  //         {item.stok > 0 ? (
  //           <NumericInput
  //             value={value}
  //             totalWidth={140}
  //             totalHeight={30}
  //             iconSize={25}
  //             step={1}
  //             maxValue={item.stok}
  //             minValue={0}
  //             borderColor={WARNA_DEEPYELLOW}
  //             rounded
  //             textColor={WARNA_SEKUNDER}
  //             iconStyle={{color: WARNA_SEKUNDER}}
  //             rightButtonBackgroundColor={WARNA_UTAMA}
  //             leftButtonBackgroundColor={WARNA_UTAMA}
  //           />
  //         ) : (
  //           <Text
  //             bold
  //             color={WARNA_RED}
  //             italic
  //             fontSize={responsiveFontSize(2.2)}>
  //             Out of stock
  //           </Text>
  //         )}
  //       </HStack>
  //     </Box>
  //     <Text
  //       lineHeight={24}
  //       fontSize={responsiveFontSize(1.8)}
  //       marginHorizontal={responsiveHeight(3)}
  //       marginVertical={responsiveHeight(2)}>
  //       {item.deskripsi}
  //     </Text>
  //     <Buttone
  //       bg={WARNA_UTAMA}
  //       onPress={() => navigation.navigate('Keranjang3', item)}
  //       color={WARNA_SEKUNDER}
  //       mt={5}
  //       mx={responsiveHeight(3)}>
  //       ADD TO CART
  //     </Buttone>
  //     {/* <Review /> */}
  //   </ScrollView>
  // );
};
export default CheckoutShipping;
