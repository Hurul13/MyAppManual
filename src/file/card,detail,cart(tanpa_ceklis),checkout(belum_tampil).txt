// card

import IconMaterial from 'react-native-vector-icons/MaterialCommunityIcons';
import {url} from '../../utils/url';
import React, {useState, useEffect} from 'react';
import {View, Text, FlatList, Image, TouchableOpacity} from 'react-native';
import {useNavigation} from '@react-navigation/native';
import {WARNA_BLACK, WARNA_GRAYTUA, WARNA_GREEN} from '../../utils/constant';
import AsyncStorage from '@react-native-async-storage/async-storage';

const CheckoutAddress = () => {
  const [data, setData] = useState([]);
  const [cartCount, setCartCount] = useState(0);
  const navigation = useNavigation();

  useEffect(() => {
    fetch(`${url}supplier-barang/index`)
      .then(response => response.json())
      .then(json => setData(json.data))
      .catch(error => console.error(error));
  }, []);

  const handleCardClick = item => {
    navigation.navigate('CheckoutShipping', {item});
  };

  // const handleCartClick = () => {
  //   navigation.navigate('CheckoutPayment');
  // };

  // untukk menampilkan banyaknya cart
  useEffect(() => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          setCartCount(cart.length);
        }
      })
      .catch(error => console.error(error));
  }, []);

  const handleAddToCart = () => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          cart.push({...item, quantity});
          AsyncStorage.setItem('cart', JSON.stringify(cart))
            .then(() => {
              setCartCount(cart.length);
              navigation.navigate('CheckoutPayment');
            })
            .catch(error => console.error(error));
        } else {
          const cart = [{...item, quantity}];
          AsyncStorage.setItem('cart', JSON.stringify(cart))
            .then(() => {
              setCartCount(cart.length);
              navigation.navigate('CheckoutPayment');
            })
            .catch(error => console.error(error));
        }
      })
      .catch(error => console.error(error));
  };

  const renderItem = ({item}) => (
    <TouchableOpacity style={styles.card} onPress={() => handleCardClick(item)}>
      <Image
        style={styles.image}
        source={require('../../assets/Images/batu.jpg')}
      />
      <Text style={styles.name}>{item.nama_barang}</Text>
      <Text style={styles.price}>Price: {item.harga_proyek}</Text>
      <Text style={styles.stock}>Stock: {item.stok}</Text>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      <FlatList
        data={data}
        renderItem={renderItem}
        keyExtractor={item => item.id.toString()}
      />
      <TouchableOpacity
        style={styles.cart}
        // onPress={handleCartClick}
        onPress={() => navigation.navigate('CheckoutPayment')}>
        <Text style={styles.cartText}>{cartCount}</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = {
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  card: {
    backgroundColor: '#f2f2f2',
    margin: 10,
    padding: 10,
    borderRadius: 10,
  },
  image: {
    width: '100%',
    height: 200,
    resizeMode: 'contain',
  },
  name: {
    fontSize: 18,
    fontWeight: 'bold',
    marginTop: 10,
    color: WARNA_BLACK,
  },
  price: {
    fontSize: 16,
    marginTop: 5,
    color: WARNA_GRAYTUA,
  },
  stock: {
    fontSize: 16,
    marginTop: 5,
    color: WARNA_GREEN,
  },
  cart: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    backgroundColor: 'red',
    width: 50,
    height: 50,
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
  },
  cartText: {
    color: '#fff',
    fontSize: 20,
    fontWeight: 'bold',
  },
};

export default CheckoutAddress;




// detail card

import React, {useState, useEffect} from 'react';
import {View, Text, Image, StyleSheet, TouchableOpacity} from 'react-native';
import NumericInput from 'react-native-numeric-input';
import AsyncStorage from '@react-native-async-storage/async-storage';
import {useNavigation, useRoute} from '@react-navigation/native';
import {WARNA_BLACK, WARNA_GRAYTUA, WARNA_GREEN} from '../../utils/constant';

const CheckoutShipping = () => {
  const [quantity, setQuantity] = useState(1);
  const [cartCount, setCartCount] = useState(0);
  const navigation = useNavigation();
  const route = useRoute();
  const {item} = route.params;

  useEffect(() => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          setCartCount(cart.length);
        }
      })
      .catch(error => console.error(error));
  }, []);

  const handleAddToCart = () => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          cart.push({...item, quantity});
          AsyncStorage.setItem('cart', JSON.stringify(cart))
            .then(() => {
              setCartCount(cart.length);
              navigation.navigate('CheckoutPayment');
            })
            .catch(error => console.error(error));
        } else {
          const cart = [{...item, quantity}];
          AsyncStorage.setItem('cart', JSON.stringify(cart))
            .then(() => {
              setCartCount(cart.length);
              navigation.navigate('CheckoutPayment');
            })
            .catch(error => console.error(error));
        }
      })
      .catch(error => console.error(error));
  };

  return (
    <View style={styles.container}>
      <Image
        style={styles.image}
        source={require('../../assets/Images/batu.jpg')}
      />
      <Text style={styles.name}>{item.nama_barang}</Text>
      <Text style={styles.price}>Price: {item.harga_proyek}</Text>
      <Text style={styles.description}>{item.deskripsi}</Text>
      <Text style={styles.stock}>Stock:</Text>
      <NumericInput
        value={quantity}
        onChange={setQuantity}
        minValue={1}
        maxValue={item.stok}
        totalWidth={200}
        totalHeight={50}
        iconSize={25}
        step={1}
        valueType="real"
        rounded
        textColor="#B0228C"
        iconStyle={{color: 'white'}}
        rightButtonBackgroundColor="#B0228C"
        leftButtonBackgroundColor="#B0228C"
      />
      <TouchableOpacity style={styles.button} onPress={handleAddToCart}>
        <Text style={styles.buttonText}>Add to Cart</Text>
      </TouchableOpacity>
      <TouchableOpacity
        style={styles.cart}
        onPress={() => navigation.navigate('CheckoutPayment')}>
        <Text style={styles.cartText}>{cartCount}</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
  image: {
    width: '100%',
    height: 200,
    resizeMode: 'contain',
  },
  name: {
    fontSize: 18,
    fontWeight: 'bold',
    marginTop: 10,
    color: WARNA_BLACK,
  },
  price: {
    fontSize: 16,
    marginTop: 5,
    color: WARNA_GRAYTUA,
  },
  description: {
    fontSize: 16,
    marginTop: 5,
    textAlign: 'center',
    paddingHorizontal: 20,
    color: WARNA_BLACK,
  },
  stock: {
    fontSize: 16,
    marginTop: 10,
    color: WARNA_GREEN,
  },
  button: {
    backgroundColor: '#B0228C',
    padding: 10,
    borderRadius: 10,
    marginTop: 10,
  },
  buttonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  cart: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    backgroundColor: 'red',
    width: 50,
    height: 50,
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
  },
});

export default CheckoutShipping;




// cart

import React, {useState, useEffect} from 'react';
import {
  View,
  Text,
  Image,
  StyleSheet,
  TouchableOpacity,
  FlatList,
} from 'react-native';
import NumericInput from 'react-native-numeric-input';
import AsyncStorage from '@react-native-async-storage/async-storage';
import {useNavigation} from '@react-navigation/native';
import {
  WARNA_BLACK,
  WARNA_GRAYTUA,
  WARNA_GREEN,
  WARNA_RED,
  WARNA_SILVER,
  WARNA_UNGUPINK,
  WARNA_WHITE,
} from '../../utils/constant';
import {
  responsiveFontSize,
  responsiveHeight,
} from 'react-native-responsive-dimensions';

const CheckoutPayment = () => {
  const [cart, setCart] = useState([]);
  const [totalPrice, setTotalPrice] = useState(0);
  const navigation = useNavigation();

  useEffect(() => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          setCart(cart);
          const price = cart.reduce(
            (acc, item) => acc + item.harga_proyek * item.quantity,
            0,
          );
          setTotalPrice(price);
        }
      })
      .catch(error => console.error(error));
  }, []);

  const handleDeleteItem = id => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          const newCart = cart.filter(item => item.id !== id);
          AsyncStorage.setItem('cart', JSON.stringify(newCart))
            .then(() => {
              setCart(newCart);
              const price = newCart.reduce(
                (acc, item) => acc + item.harga_proyek * item.quantity,
                0,
              );
              setTotalPrice(price);
            })
            .catch(error => console.error(error));
        }
      })
      .catch(error => console.error(error));
  };

  const handleCheckout = () => {
    AsyncStorage.setItem('cart', JSON.stringify([]))
      .then(() => {
        setCart([]);
        setTotalPrice(0);
        navigation.navigate('CheckoutSelesai', {cart});
      })
      .catch(error => console.error(error));
  };

  const renderItem = ({item}) => (
    <View style={styles.card}>
      <Image
        style={styles.image}
        source={require('../../assets/Images/batu.jpg')}
      />
      <View style={styles.details}>
        <Text style={styles.name}>{item.nama_barang}</Text>
        <Text style={styles.price}>Price: {item.harga_proyek}</Text>
        <Text style={styles.stock}>Stock:</Text>
        <NumericInput
          value={item.quantity}
          minValue={1}
          maxValue={item.stok}
          totalWidth={100}
          totalHeight={30}
          iconSize={20}
          step={1}
          valueType="real"
          rounded
          textColor="#B0228C"
          iconStyle={{color: 'white'}}
          rightButtonBackgroundColor="#B0228C"
          leftButtonBackgroundColor="#B0228C"
          onChange={value => {
            AsyncStorage.getItem('cart')
              .then(data => {
                if (data !== null) {
                  const cart = JSON.parse(data);
                  const index = cart.findIndex(i => i.id === item.id);
                  cart[index].quantity = value;
                  AsyncStorage.setItem('cart', JSON.stringify(cart))
                    .then(() => {
                      setCart(cart);
                      const price = cart.reduce(
                        (acc, item) => acc + item.harga_proyek * item.quantity,
                        0,
                      );
                      setTotalPrice(price);
                    })
                    .catch(error => console.error(error));
                }
              })
              .catch(error => console.error(error));
          }}
        />
        <TouchableOpacity
          style={styles.delete}
          onPress={() => handleDeleteItem(item.id)}>
          <Text style={styles.deleteText}>X</Text>
        </TouchableOpacity>
      </View>
    </View>
  );

  return (
    <View style={styles.container}>
      <FlatList
        data={cart}
        renderItem={renderItem}
        keyExtractor={item => item.id.toString()}
      />
      <View style={styles.total}>
        <Text style={styles.totalText}>Total: {totalPrice}</Text>
        <TouchableOpacity style={styles.checkout} onPress={handleCheckout}>
          <Text style={styles.checkoutText}>Checkout</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    padding: 10,
  },
  card: {
    flexDirection: 'row',
    alignItems: 'center',
    marginVertical: 10,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 10,
    padding: 10,
  },
  image: {
    width: 80,
    height: 80,
    marginRight: 10,
  },
  name: {
    fontSize: 16,
    fontWeight: 'bold',
    color: WARNA_BLACK,
  },
  price: {
    fontSize: 14,
    // fontWeight: 'bold',
    color: WARNA_GRAYTUA,
  },
  stock: {
    fontSize: 14,
    // fontWeight: 'bold',
    color: WARNA_GREEN,
  },
  delete: {
    backgroundColor: WARNA_RED,
    padding: 8,
    width: 30,
    justifyContent: 'center',
    alignItems: 'center',
  },
  deleteText: {
    color: WARNA_WHITE,
    // backgroundColor: WARNA_RED,
    // padding: 8,
  },
  total: {
    backgroundColor: WARNA_SILVER,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    // paddingHorizontal: responsiveHeight(2),
  },
  totalText: {
    color: WARNA_BLACK,
    fontSize: responsiveFontSize(2),
    fontWeight: '500',
    textAlign: 'center',
    paddingLeft: responsiveHeight(2),
  },
  checkout: {
    backgroundColor: WARNA_UNGUPINK,
    padding: 8,
  },
  checkoutText: {
    color: WARNA_WHITE,
    fontSize: responsiveFontSize(2),
    fontWeight: 'bold',
  },
});
export default CheckoutPayment;




// checkout (tapi belum tampil)

import React, {useState, useEffect} from 'react';
import {
  View,
  Text,
  Image,
  StyleSheet,
  TouchableOpacity,
  FlatList,
} from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import {WARNA_BLACK, WARNA_GRAYTUA} from '../../utils/constant';

const CheckoutSelesai = () => {
  const [cart, setCart] = useState([]);
  const [totalPrice, setTotalPrice] = useState(0);

  useEffect(() => {
    AsyncStorage.getItem('cart')
      .then(data => {
        if (data !== null) {
          const cart = JSON.parse(data);
          setCart(cart);
          const price = cart.reduce(
            (acc, item) => acc + item.harga_proyek * item.quantity,
            0,
          );
          setTotalPrice(price);
        }
      })
      .catch(error => console.error(error));
  }, []);

  const renderItem = ({item}) => (
    <View style={styles.card}>
      <Image
        style={styles.image}
        source={require('../../assets/Images/batu.jpg')}
      />
      <View style={styles.details}>
        <Text style={styles.name}>{item.nama_barang}</Text>
        <Text style={styles.quantity}>Quantity: {item.quantity}</Text>
      </View>
    </View>
  );

  return (
    <View style={styles.container}>
      <FlatList
        data={cart}
        renderItem={renderItem}
        keyExtractor={item => item.id.toString()}
      />
      <View style={styles.total}>
        <Text style={styles.totalText}>Total: {totalPrice}</Text>
        <TouchableOpacity style={styles.payment}>
          <Text style={styles.paymentText}>Pay</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    padding: 10,
  },
  card: {
    flexDirection: 'row',
    alignItems: 'center',
    marginVertical: 10,
    borderWidth: 1,
    borderColor: '#ccc',
    borderRadius: 10,
    padding: 10,
  },
  image: {
    width: 80,
    height: 80,
    marginRight: 10,
  },
  details: {
    flex: 1,
  },
  name: {
    fontSize: 16,
    fontWeight: 'bold',
    color: WARNA_BLACK,
  },
  quantity: {
    fontSize: 14,
    color: '#888',
  },
  total: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: 20,
  },
  totalText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: WARNA_GRAYTUA,
  },
  payment: {
    backgroundColor: '#B0228C',
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 10,
  },
  paymentText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
});

export default CheckoutSelesai;
